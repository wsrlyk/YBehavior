<UserControl x:Class="YBehavior.Editor.UIVariable"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:YBehavior.Editor"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             mc:Ignorable="d" 
             d:DesignWidth="400" DataContextChanged="UserControl_DataContextChanged">
    <UserControl.Style>
        <Style>
            <Setter Property="local:UIVariable.CandidatesReset" Value="{Binding Path=CandidatesReset}" />
            <!--<Setter Property="local:UINode.DebugConstant" Value="{Binding Path=DebugConstant}" />-->
        </Style>
    </UserControl.Style>
    <UserControl.Resources>
        <local:VariableValidColorConvertor x:Key="validConvertor"/>
        <local:VariableRefreshColorConvertor x:Key="refreshConvertor"/>
        <local:VariableCountTypeColorConvertor x:Key="countTypeConvertor"/>
        <local:VariableReferencedTypeColorConvertor x:Key="referencedTypeConvertor"/>
        <BooleanToVisibilityConverter x:Key="visibilityConvertor"/>
        <local:VariableValueTypeConvertor x:Key="valueTypeConvertor"/>
        <local:VariableVariableTypeConvertor x:Key="variableTypeConvertor"/>
        <local:VariableEnableTypeConvertor x:Key="enableTypeConvertor"/>
        <local:BoolOpacityConvertor x:Key="boolOpacityConvertor"/>
        <local:StringBoolConvertor x:Key="stringBoolConvertor"/>
        <local:VariableTypeCountConvertor x:Key="typeCountConvertor"/>
        <local:InvertBoolConverter x:Key="invertBoolConvertor"/>
        <local:ValueConverterGroup x:Key="invertBoolAndVisibilityConvertor">
            <local:InvertBoolConverter/>
            <BooleanToVisibilityConverter/>
        </local:ValueConverterGroup>
        <LinearGradientBrush x:Key="normalBrush"  StartPoint="0,0" EndPoint="1,0">
            <GradientStop Offset="0.0" Color="#00E0FFFF"/>
            <GradientStop Offset="0.33" Color="#AAE0FFFF"/>
            <GradientStop Offset="0.66" Color="#AAADD8E6"/>
            <GradientStop Offset="1.0" Color="#00ADD8E6"/>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="hormalBrush"  StartPoint="0,0" EndPoint="1,0">
            <GradientStop Offset="0.0" Color="#00E0FFFF"/>
            <GradientStop Offset="0.33" Color="#EEE0FFFF"/>
            <GradientStop Offset="0.66" Color="#EEADD8E6"/>
            <GradientStop Offset="1.0" Color="#00ADD8E6"/>
        </LinearGradientBrush>

        <Style x:Key="TransparentHoverStyle" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border>
                            <Border.Style>
                                <Style TargetType="{x:Type Border}">
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" Value="{StaticResource hormalBrush}"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Grid Background="{StaticResource normalBrush}">
                                <ContentPresenter></ContentPresenter>
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="QuickToolTipStyle">
            <Setter Property="ToolTipService.InitialShowDelay" Value="0"/>
        </Style>
    </UserControl.Resources>
    <StackPanel Opacity ="{Binding ElementName=ESwitcher, Path=IsChecked, Converter={StaticResource boolOpacityConvertor}, Mode=OneWay}">
        <DockPanel Background="LightBlue" Margin="0,1,0,1">
            <Grid DockPanel.Dock="Left">
                <TextBlock Name="VKey" Style="{StaticResource QuickToolTipStyle}" Text="{Binding DisplayName}" FontSize="13" Width="150" Background="{Binding cType, Converter={StaticResource countTypeConvertor}}" ToolTip="{Binding Description}" MouseLeftButtonUp="VKey_MouseLeftButtonUp"/>
                <Button Name="CSwitcher" Style="{StaticResource TransparentHoverStyle}" Click="CSwitcher_Click" IsEnabled="{Binding IsEditable}" Visibility="{Binding Path = CanSwitchList, Converter={StaticResource visibilityConvertor}}" ToolTip="{Binding Description}" Margin="126,0,0,0">
                </Button>
            </Grid>
            <ComboBox IsEnabled="{Binding IsEditable}" Name="VTypes" Width="55" ItemsSource="{Binding vTypeSet}" SelectedItem="{Binding vType}"
                IsHitTestVisible="{Binding vTypeSet, Converter={StaticResource typeCountConvertor}}" SelectionChanged="VTypes_SelectionChanged">
                <!--IsEditable="{Binding vTypeSet, Converter={StaticResource typeCountConvertor}}"
                      Focusable="False"
                      -->
                <ComboBox.Resources>
                    <sys:Double x:Key="{x:Static SystemParameters.VerticalScrollBarWidthKey}">0</sys:Double>
                </ComboBox.Resources>
                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding Converter={StaticResource valueTypeConvertor}}" FontSize="10" />
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>
            <StackPanel Orientation="Horizontal"  DockPanel.Dock="Right">
                <CheckBox IsEnabled="{Binding IsEditable}" Width="20" Height="20" Name="VBSwitcher" Background="Orange" Foreground="GreenYellow" IsChecked="{Binding vbType, Converter={StaticResource variableTypeConvertor}}" Visibility="{Binding Path = CanSwitchConst, Converter={StaticResource visibilityConvertor}}"/>
                <CheckBox IsEnabled="{Binding IsEditable}" Width="20" Height="20" Name="ESwitcher" Background="Gray" Foreground="LightGray" IsChecked="{Binding eType, Converter={StaticResource enableTypeConvertor}}" Visibility="{Binding Path = CanSwitchEnable, Converter={StaticResource visibilityConvertor}}"/>
                <Button Width="20" Height="20" Name="Remover" Background="{Binding referencedType, Converter={StaticResource referencedTypeConvertor}}" Visibility="{Binding Path = CanBeRemoved,  Converter={StaticResource visibilityConvertor}, Mode=OneWay}" Click="Remover_Click"
                        Content="X" Foreground="Red"
                        Style="{StaticResource ButtonNone}"/>
                <Button Width="20" Height="20" Name="ContainerSwitcher" Background="MediumPurple" Visibility="{Binding Path = CanSwitchContainer,  Converter={StaticResource visibilityConvertor}, Mode=OneWay}" Click="ContainerSwitcher_Click"
                        Content="⇅" Foreground="Purple"
                        Style="{StaticResource ButtonNone}"/>

            </StackPanel>
            <Grid>
                <ComboBox IsEnabled="{Binding IsEditable}" ItemsSource="{Binding Candidates.variables}" 
                          DisplayMemberPath="variable.DisplayName"
                          SelectedValue="{Binding DisplayValue}" SelectedValuePath="variable.DisplayName"
                          x:Name="VPointer" MinWidth="110" MaxDropDownHeight ="150"
                      Visibility="{Binding Path=IsChecked, ElementName=VBSwitcher, Converter={StaticResource visibilityConvertor}}" 
                      Background="{Binding Path = IsValid, Converter={StaticResource validConvertor}}">
                    <ComboBox.ItemsPanel>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel />
                        </ItemsPanelTemplate>
                    </ComboBox.ItemsPanel>
                </ComboBox>
                <Grid Visibility="{Binding Path=IsChecked, ElementName=VBSwitcher, Converter={StaticResource invertBoolAndVisibilityConvertor}}">
                    <TextBox ToolTip="{Binding DisplayValue}"  IsReadOnly="{Binding IsEditable, Converter={StaticResource invertBoolConvertor}}" Name="VConst" Text="{Binding DisplayValue}" 
                             Background="{Binding Path = IsValid, Converter={StaticResource validConvertor}}" 
                             BorderBrush="{Binding Path = IsRefreshed, Converter={StaticResource refreshConvertor}}" BorderThickness="2"/>
                    <ComboBox IsEnabled="{Binding IsEditable}" Name="VEnum" SelectedItem="{Binding DisplayValue}" ItemsSource="{Binding Enums}" Background="{Binding Path = IsValid, Converter={StaticResource validConvertor}}"/>
                    <CheckBox IsEnabled="{Binding IsEditable}" Name="VBool" IsChecked="{Binding DisplayValue, Converter={StaticResource stringBoolConvertor}}" Background="{Binding Path = IsValid, Converter={StaticResource validConvertor}}" VerticalAlignment="Center"/>
                </Grid>
            </Grid>
        </DockPanel>
        <DockPanel  Margin="72,2,52,2" Visibility="{Binding IsElement, Converter={StaticResource visibilityConvertor}}">
            <TextBlock Text="Index" FontSize="13" Width="40" DockPanel.Dock="Left" Background="LightCyan"/>
            <CheckBox IsEnabled="{Binding IsEditable}" Width="20" Height="20" Name="VectorIndexSwitcher" Background="Orange" Foreground="GreenYellow" DockPanel.Dock="Right" IsChecked="{Binding Path=VectorIndex.vbType, Converter={StaticResource variableTypeConvertor}}"/>
            <Grid>
                <ComboBox IsEnabled="{Binding IsEditable}"
                          ItemsSource="{Binding Path=VectorIndex.Candidates.variables}"
                          DisplayMemberPath="variable.DisplayName"
                          SelectedValue="{Binding VectorIndex.DisplayValue}" SelectedValuePath="variable.DisplayName"
                          x:Name="VectorIndexPointer" MinWidth="110" MaxDropDownHeight ="150"
                      Visibility="{Binding Path=IsChecked, ElementName=VectorIndexSwitcher, Converter={StaticResource visibilityConvertor}}" 
                      Background="{Binding Path = VectorIndex.IsValid, Converter={StaticResource validConvertor}}">
                    <ComboBox.ItemsPanel>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel />
                        </ItemsPanelTemplate>
                    </ComboBox.ItemsPanel>
                </ComboBox>
                <Grid Visibility="{Binding Path=IsChecked, ElementName=VectorIndexSwitcher, Converter={StaticResource invertBoolAndVisibilityConvertor}}">
                    <TextBox IsReadOnly="{Binding IsEditable, Converter={StaticResource invertBoolConvertor}}" Name="VectorIndexConst" Text="{Binding Path=VectorIndex.DisplayValue}" ToolTip="{Binding Path=VectorIndex.DisplayValue}"  Background="{Binding Path = VectorIndex.IsValid, Converter={StaticResource validConvertor}}"/>
                </Grid>
            </Grid>
        </DockPanel>
    </StackPanel>
</UserControl>
